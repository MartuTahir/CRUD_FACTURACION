// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace FacturacionAPI_EF.Models;

public partial class LibraryContext : DbContext
{
    public LibraryContext(DbContextOptions<LibraryContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Article> Articulos { get; set; }

    public virtual DbSet<BudgetDetail> DetallesFacturas { get; set; }

    public virtual DbSet<Budget> Facturas { get; set; }

    public virtual DbSet<PayMethod> FormaPagos { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Article>(entity =>
        {
            entity.HasKey(e => e.IdArticulo);

            entity.ToTable("articulos");

            entity.Property(e => e.IdArticulo).HasColumnName("id_articulo");
            entity.Property(e => e.EstaActivo).HasColumnName("esta_activo");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.PreUnitario).HasColumnName("pre_unitario");
        });

        modelBuilder.Entity<BudgetDetail>(entity =>
        {
            entity.HasKey(e => e.IdDetalle).HasName("PK_Detalles_Factura");

            entity.ToTable("detalles_Factura");

            entity.Property(e => e.IdDetalle).HasColumnName("id_detalle");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.IdArticulo).HasColumnName("id_articulo");
            entity.Property(e => e.IdFactura).HasColumnName("id_factura");

            entity.HasOne(d => d.IdArticuloNavigation).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.IdArticulo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Detalles_Facturas_Articulos");

            entity.HasOne(d => d.IdFacturaNavigation).WithMany(p => p.DetallesFacturas)
                .HasForeignKey(d => d.IdFactura)
                .HasConstraintName("FK_Detalles_Facturas_Facturas");
        });

        modelBuilder.Entity<Budget>(entity =>
        {
            entity.ToTable("facturas");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Cliente)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cliente");
            entity.Property(e => e.EstaActiva).HasColumnName("esta_activa");
            entity.Property(e => e.Fecha)
                .HasColumnType("datetime")
                .HasColumnName("fecha");
            entity.Property(e => e.FormaPago).HasColumnName("forma_pago");

            entity.HasOne(d => d.FormaPagoNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.FormaPago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Facturas_Forma_Pago");
        });

        modelBuilder.Entity<PayMethod>(entity =>
        {
            entity.ToTable("forma_pago");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nombre");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}